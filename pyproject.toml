[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "testgen"
version = "0.1.0"
description = "CLI-утилита для генерации и запуска тестов для приложений на разных языках программирования"
readme = "README.md"
requires-python = ">=3.7"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "click>=8.1.3",
    "rich>=12.0.0",
    "prompt-toolkit>=3.0.28",
    "pyyaml>=6.0",
    "pytest>=7.3.1",
    "textual>=0.27.0",
    "typer==0.9.0",
    "pyfiglet>=0.8.post1",
    "pytest-cov>=4.1.0",
    "gitpython>=3.1.30",
]

[project.scripts]
testgen = "testgen:main"

[tool.pytest]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pylint.messages_control]
disable = "C0111,R0903,C0103"

[tool.testgen]
# Настройки фреймворков для генерации тестов
[tool.testgen.languages]
python = ["pytest", "unittest"]
javascript = ["jest", "mocha"]
go = ["testing"]
java = ["junit", "testng"]
ruby = ["rspec", "minitest"]
rust = ["cargo-test"]
php = ["phpunit"]
csharp = ["nunit", "xunit", "mstest"]
typescript = ["jest", "mocha"]
kotlin = ["junit", "kotlintest"]
swift = ["xctest"]
c = ["gtest", "cunit"]
cpp = ["gtest", "catch2"]
perl = ["test-more"]
scala = ["scalatest"]
haskell = ["hspec"]

# Настройки отчетов
[tool.testgen.reports]
default_format = "html"
output_dir = "reports"

# Настройки CI/CD
[tool.testgen.ci]
default_type = "github" 